diff -u -r libs/filesystem/src/operations.cpp libs/filesystem/src/operations.cpp
--- libs/filesystem/src/operations.cpp
+++ libs/filesystem/src/operations.cpp
@@ -73,14 +73,14 @@
     const fs::path dot_dot_path("..");
 #   include <sys/types.h>
 #   include <sys/stat.h>
-#   if !defined(__APPLE__) && !defined(__OpenBSD__) && !defined(__ANDROID__)
+#   if !defined(__APPLE__) && !defined(__OpenBSD__) && !defined(__ANDROID__) && !defined(ANDROID)
 #     include <sys/statvfs.h>
 #     define BOOST_STATVFS statvfs
 #     define BOOST_STATVFS_F_FRSIZE vfs.f_frsize
 #   else
 #     ifdef __OpenBSD__
 #     include <sys/param.h>
-#     elif defined(__ANDROID__)
+#     elif defined(__ANDROID__) || defined(ANDROID)
 #     include <sys/vfs.h>
 #     endif
 #     include <sys/mount.h>
@@ -208,7 +208,19 @@
          || ::mkdir(to.c_str(),from_stat.st_mode)!= 0))
 #   define BOOST_COPY_FILE(F,T,FailIfExistsBool)copy_file_api(F, T, FailIfExistsBool)
 #   define BOOST_MOVE_FILE(OLD,NEW)(::rename(OLD, NEW)== 0)
+#if defined(__ANDROID__) || defined(ANDROID)
+    int BOOST_RESIZE_FILE(const char *path, off_t size)
+    {
+      int result = -1;
+      int fd = open(path, O_WRONLY);
+      if (fd != -1)
+        result = ftruncate(fd, size);
+      close(fd);
+      return result;
+    }
+#else
 #   define BOOST_RESIZE_FILE(P,SZ)(::truncate(P, SZ)== 0)
+#endif
 
 #   define BOOST_ERROR_NOT_SUPPORTED ENOSYS
 #   define BOOST_ERROR_ALREADY_EXISTS EEXIST
diff -u -r libs/filesystem/src/path.cpp libs/filesystem/src/path.cpp
--- libs/filesystem/src/path.cpp   2012-04-16 15:36:28.000000000 +0200
+++ libs/filesystem/src/path.cpp   2014-09-24 11:43:13.206476815 +0200
@@ -903,7 +903,8 @@
   const path::codecvt_type& path::codecvt()
   {
 #   if defined(BOOST_POSIX_API) && \
-      !(defined(macintosh) || defined(__APPLE__) || defined(__APPLE_CC__))
+      !(defined(macintosh) || defined(__APPLE__) || defined(__APPLE_CC__) \
+        || defined(__ANDROID__) )
       // A local static initialized by calling path::imbue ensures that std::locale(""),
       // which may throw, is called only if path_locale and condecvt_facet will actually
       // be used. Thus misconfigured environmental variables will only cause an
